var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);

// node_modules/@mappedin/mappedin-js/lib/esm/chunk-N7QS5LVF.js
var h = Object.create;
var f = Object.defineProperty;
var i = Object.getOwnPropertyDescriptor;
var j = Object.getOwnPropertyNames;
var k = Object.getPrototypeOf;
var l = Object.prototype.hasOwnProperty;
var m = (b, a, c) => a in b ? f(b, a, { enumerable: true, configurable: true, writable: true, value: c }) : b[a] = c;
var r = (b, a) => f(b, "name", { value: a, configurable: true });
var n = (b, a) => () => (b && (a = b(b = 0)), a);
var s = (b, a) => () => (a || b((a = { exports: {} }).exports, a), a.exports);
var t = (b, a) => {
  for (var c in a) f(b, c, { get: a[c], enumerable: true });
};
var o = (b, a, c, d) => {
  if (a && typeof a == "object" || typeof a == "function") for (let e of j(a)) !l.call(b, e) && e !== c && f(b, e, { get: () => a[e], enumerable: !(d = i(a, e)) || d.enumerable });
  return b;
};
var u = (b, a, c) => (c = b != null ? h(k(b)) : {}, o(a || !b || !b.__esModule ? f(c, "default", { value: b, enumerable: true }) : c, b));
var v = (b, a, c) => (m(b, typeof a != "symbol" ? a + "" : a, c), c);
var g = (b, a, c) => {
  if (!a.has(b)) throw TypeError("Cannot " + c);
};
var w = (b, a, c) => (g(b, a, "read from private field"), c ? c.call(b) : a.get(b));
var x = (b, a, c) => {
  if (a.has(b)) throw TypeError("Cannot add the same private member more than once");
  a instanceof WeakSet ? a.add(b) : a.set(b, c);
};
var y = (b, a, c, d) => (g(b, a, "write to private field"), d ? d.call(b, c) : a.set(b, c), c);
var z = (b, a, c) => (g(b, a, "access private method"), c);
var C;
var q = n(() => {
  C = { env: { NODE_ENV: "production", npm_package_version: "6.0.1-alpha.36" } };
});

export {
  __publicField,
  r,
  s,
  t,
  u,
  v,
  w,
  x,
  y,
  z,
  C,
  q
};
//# sourceMappingURL=chunk-F6LUTOTK.js.map
