{
  "version": 3,
  "sources": ["../../@mappedin/mappedin-js/lib/esm/chunk-3A3IZSQH.js"],
  "sourcesContent": ["import{M as B,N as y,q as w,r as x,s as b}from\"./chunk-J3F43M4Z.js\";import{a as g,j as A}from\"./chunk-N7QS5LVF.js\";A();function R(o,l=!1){let r=o[0].index!==null,f=new Set(Object.keys(o[0].attributes)),i=new Set(Object.keys(o[0].morphAttributes)),c={},e={},h=o[0].morphTargetsRelative,u=new y,d=0;for(let t=0;t<o.length;++t){let s=o[t],a=0;if(r!==(s.index!==null))return console.error(\"THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index \"+t+\". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.\"),null;for(let n in s.attributes){if(!f.has(n))return console.error(\"THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index \"+t+'. All geometries must have compatible attributes; make sure \"'+n+'\" attribute exists among all geometries, or in none of them.'),null;c[n]===void 0&&(c[n]=[]),c[n].push(s.attributes[n]),a++}if(a!==f.size)return console.error(\"THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index \"+t+\". Make sure all geometries have the same number of attributes.\"),null;if(h!==s.morphTargetsRelative)return console.error(\"THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index \"+t+\". .morphTargetsRelative must be consistent throughout all geometries.\"),null;for(let n in s.morphAttributes){if(!i.has(n))return console.error(\"THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index \"+t+\".  .morphAttributes must be consistent throughout all geometries.\"),null;e[n]===void 0&&(e[n]=[]),e[n].push(s.morphAttributes[n])}if(l){let n;if(r)n=s.index.count;else if(s.attributes.position!==void 0)n=s.attributes.position.count;else return console.error(\"THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index \"+t+\". The geometry must have either an index or a position attribute\"),null;u.addGroup(d,n,t),d+=n}}if(r){let t=0,s=[];for(let a=0;a<o.length;++a){let n=o[a].index;for(let m=0;m<n.count;++m)s.push(n.getX(m)+t);t+=o[a].attributes.position.count}u.setIndex(s)}for(let t in c){let s=T(c[t]);if(!s)return console.error(\"THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the \"+t+\" attribute.\"),null;u.setAttribute(t,s)}for(let t in e){let s=e[t][0].length;if(s===0)break;u.morphAttributes=u.morphAttributes||{},u.morphAttributes[t]=[];for(let a=0;a<s;++a){let n=[];for(let p=0;p<e[t].length;++p)n.push(e[t][p][a]);let m=T(n);if(!m)return console.error(\"THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the \"+t+\" morphAttribute.\"),null;u.morphAttributes[t].push(m)}}return u}g(R,\"mergeGeometries\");function T(o){let l,r,f,i=-1,c=0;for(let d=0;d<o.length;++d){let t=o[d];if(l===void 0&&(l=t.array.constructor),l!==t.array.constructor)return console.error(\"THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.\"),null;if(r===void 0&&(r=t.itemSize),r!==t.itemSize)return console.error(\"THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.\"),null;if(f===void 0&&(f=t.normalized),f!==t.normalized)return console.error(\"THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.\"),null;if(i===-1&&(i=t.gpuType),i!==t.gpuType)return console.error(\"THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.\"),null;c+=t.count*r}let e=new l(c),h=new B(e,r,f),u=0;for(let d=0;d<o.length;++d){let t=o[d];if(t.isInterleavedBufferAttribute){let s=u/r;for(let a=0,n=t.count;a<n;a++)for(let m=0;m<r;m++){let p=t.getComponent(a,m);h.setComponent(a+s,m,p)}}else e.set(t.array,u);u+=t.count*r}return i!==void 0&&(h.gpuType=i),h}g(T,\"mergeAttributes\");function X(o,l){if(l===w)return console.warn(\"THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.\"),o;if(l===b||l===x){let r=o.getIndex();if(r===null){let e=[],h=o.getAttribute(\"position\");if(h!==void 0){for(let u=0;u<h.count;u++)e.push(u);o.setIndex(e),r=o.getIndex()}else return console.error(\"THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.\"),o}let f=r.count-2,i=[];if(l===b)for(let e=1;e<=f;e++)i.push(r.getX(0)),i.push(r.getX(e)),i.push(r.getX(e+1));else for(let e=0;e<f;e++)e%2===0?(i.push(r.getX(e)),i.push(r.getX(e+1)),i.push(r.getX(e+2))):(i.push(r.getX(e+2)),i.push(r.getX(e+1)),i.push(r.getX(e)));i.length/3!==f&&console.error(\"THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.\");let c=o.clone();return c.setIndex(i),c.clearGroups(),c}else return console.error(\"THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:\",l),o}g(X,\"toTrianglesDrawMode\");export{R as a,X as b};\n"],
  "mappings": "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",
  "names": ["r"]
}
